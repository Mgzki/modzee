Front-End:
- Create a new Vue app
- Install TailwindCSS, generate tailwind.config.js,postcss.config.js files and a css file to import tailwind
- Begin creating the layout for the webpage; separate the photographer bio section from the gallery section
- Extract any repetitive code into components (image card component)
- consult the provided wireframe; adjust styling accordingly to reach a similar outcome
- add features:
	- scrolling gallery section with custom scroll bar in the event there are more than 6 images
	- lets you scroll the gallery while still being able to view the photographer's information
- place landscapes.json and img directory in the public directory so they can be viewed/fetched
- fetch the json, replace hard-coded sample text dynamically with data from the json, using props when needed.

Back-End:
- Create new Laravel app
- remove default seeders, factories, models, controllers that won't be used
- generate model, migration, and factory, for the following: Photographer, Gallery, Album; as well as a seeder, and a controller for Photographer
- create the Eloquent relationships between Photographer, Gallery, and Album models
- add the necessary fields to migrations in order to match the example fields in landscapes.json; ensuring to add foreign_id's 
	where necessary to associate photos to galleries and galleries to photographers
- create the factories for each model, just in case there is no provided json file to seed the database with.
	These are unused in this project, but I chose to create them anyway
- fill out the Photographer Seeder such that 1 photographer is created with 1 gallery, and 6 images in that gallery, all with randomized data (unused in this project)
- fill out the database seeder such that it seeds the database with data from the provided json file, ensuring to 'link' images to gallery, and gallery to photographer via
	foreign key
- run 'php artisan migrate:fresh --seed' to populate the database(in my case, as I'm developing on Windows at the moment, I ran 'sail artisan migrate:fresh --seed')
- I made the landing page simply display the json generated by the seeder ('localhost:port/')

Challenges:
- I wouldn't say that styling the front-end portion was difficult, but it took longer than I would have liked because I am still in the process of learning CSS and Tailwind
- Getting the api to return the data in the same format as landscapes.json wasn't hard, but rather slightly tedious because I set up the databases in such a way
	that a photographer could have multiple albums rather than just 1 as in landscapes.json

What was easy:
- loading the API and dynamically using the json data was easy as I have done it both for personal projects and other evaluations.
- Constructing the databases, eloquent relationships, and models (thanks Laravel!)

Tools I used:
- TailwindCSS : I like using Tailwind because it generally simplifies things for me, making it easier and faster to make adjustments. Overall, less headache in my opinion.
	- without tailwind it would have taken me even longer to finish styling the front-end as I haven't done much work exclusively with CSS.
- Vue.JS : Vue is the front-end framework I decided to learn, it was listed in the job description and I wanted 
	to ensure I could solve the problem with what I have learned thus far. Vue also makes it faster/easier to create an app than if I had to use raw JS

Problems Encountered:
- The image files were all .jpeg, but the json paths were all .jpg. I manually changed them all to .jpg to match the json data